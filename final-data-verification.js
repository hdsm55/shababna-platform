import { query } from './server/config/database.js';

async function finalDataVerification() {
    console.log('๐ ุงูุชุญูู ุงูููุงุฆู ูู ุนุฑุถ ุงูุจูุงูุงุช ูู PostgreSQL...');

    try {
        // ุงูุชุญูู ูู ุงูุจูุงูุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
        console.log('\n๐ ุงูุจูุงูุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช PostgreSQL:');

        const usersCount = await query('SELECT COUNT(*) as count FROM users');
        const eventsCount = await query('SELECT COUNT(*) as count FROM events');
        const programsCount = await query('SELECT COUNT(*) as count FROM programs');
        const contactsCount = await query('SELECT COUNT(*) as count FROM contact_forms');
        const joinsCount = await query('SELECT COUNT(*) as count FROM join_requests');
        const eventRegistrationsCount = await query('SELECT COUNT(*) as count FROM event_registrations');
        const programRegistrationsCount = await query('SELECT COUNT(*) as count FROM program_registrations');
        const programSupportersCount = await query('SELECT COUNT(*) as count FROM program_supporters');

        console.log(`๐ฅ ุงููุณุชุฎุฏููู: ${usersCount.rows[0].count}`);
        console.log(`๐ ุงููุนุงููุงุช: ${eventsCount.rows[0].count}`);
        console.log(`๐ฏ ุงูุจุฑุงูุฌ: ${programsCount.rows[0].count}`);
        console.log(`๐ง ุฑุณุงุฆู ุงูุชูุงุตู: ${contactsCount.rows[0].count}`);
        console.log(`๐ค ุทูุจุงุช ุงูุงูุถูุงู: ${joinsCount.rows[0].count}`);
        console.log(`๐ ุชุณุฌููุงุช ุงููุนุงููุงุช: ${eventRegistrationsCount.rows[0].count}`);
        console.log(`๐ ุชุณุฌููุงุช ุงูุจุฑุงูุฌ: ${programRegistrationsCount.rows[0].count}`);
        console.log(`๐ ุฏุงุนููู ุงูุจุฑุงูุฌ: ${programSupportersCount.rows[0].count}`);

        // ุงูุชุญูู ูู ุงูุจูุงูุงุช ุงูุญุฏูุซุฉ
        console.log('\n๐ ุงูุจูุงูุงุช ุงูุญุฏูุซุฉ (ุขุฎุฑ 7 ุฃูุงู):');

        const recentUsers = await query('SELECT COUNT(*) as count FROM users WHERE created_at >= NOW() - INTERVAL \'7 days\'');
        const recentEvents = await query('SELECT COUNT(*) as count FROM events WHERE created_at >= NOW() - INTERVAL \'7 days\'');
        const recentPrograms = await query('SELECT COUNT(*) as count FROM programs WHERE created_at >= NOW() - INTERVAL \'7 days\'');

        console.log(`๐ฅ ูุณุชุฎุฏููู ุฌุฏุฏ: ${recentUsers.rows[0].count}`);
        console.log(`๐ ูุนุงููุงุช ุฌุฏูุฏุฉ: ${recentEvents.rows[0].count}`);
        console.log(`๐ฏ ุจุฑุงูุฌ ุฌุฏูุฏุฉ: ${recentPrograms.rows[0].count}`);

        // ุงูุชุญูู ูู ุงูุจูุงูุงุช ุบูุฑ ุงูููุฑูุกุฉ
        console.log('\n๐ฌ ุงูุจูุงูุงุช ุงูุชู ุชุญุชุงุฌ ุงูุชุจุงู:');

        const unreadContacts = await query('SELECT COUNT(*) as count FROM contact_forms WHERE is_read = false');
        const pendingJoins = await query('SELECT COUNT(*) as count FROM join_requests WHERE status = \'pending\'');

        console.log(`๐ง ุฑุณุงุฆู ุบูุฑ ููุฑูุกุฉ: ${unreadContacts.rows[0].count}`);
        console.log(`๐ค ุทูุจุงุช ุงูุถูุงู ูุนููุฉ: ${pendingJoins.rows[0].count}`);

        // ุงูุชุญูู ูู ููู ุงููุณุชุฎุฏููู
        console.log('\n๐ ูุนุฏู ุงูููู:');

        const lastMonthUsers = await query('SELECT COUNT(*) as count FROM users WHERE created_at >= NOW() - INTERVAL \'30 days\'');
        const previousMonthUsers = await query('SELECT COUNT(*) as count FROM users WHERE created_at >= NOW() - INTERVAL \'60 days\' AND created_at < NOW() - INTERVAL \'30 days\'');

        const growthRate = previousMonthUsers.rows[0].count > 0
            ? ((lastMonthUsers.rows[0].count - previousMonthUsers.rows[0].count) / previousMonthUsers.rows[0].count * 100).toFixed(1)
            : lastMonthUsers.rows[0].count > 0 ? '100' : '0';

        console.log(`๐ ูุนุฏู ููู ุงููุณุชุฎุฏููู: ${growthRate}%`);

        console.log('\nโ ุงูุชุญูู ุงูููุงุฆู ููุชูู!');
        console.log('๐ ุฌููุน ุงูุจูุงูุงุช ูุชุงุญุฉ ูุชูุนุฑุถ ุจุดูู ุตุญูุญ ูู PostgreSQL');

    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุงูุชุญูู ุงูููุงุฆู:', error.message);
    }
}

finalDataVerification();