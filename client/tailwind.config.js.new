/** @type {import('tailwindcss').Config} */
const plugin = require('tailwindcss/plugin');

export default {
  content: ['./index.html', './src/**/*.{js,ts,jsx,tsx}'],
  darkMode: 'class',
  theme: {
    extend: {
      colors: {
        primary: {
          ...tokens.colors.primary,
          DEFAULT: tokens.colors.primary.main
        },
        accent: {
          ...tokens.colors.accent,
          DEFAULT: tokens.colors.accent.main
        },
        secondary: {
          ...tokens.colors.secondary,
          DEFAULT: tokens.colors.secondary.main
        },
        // Legacy color mappings
        yinmn: {
          DEFAULT: tokens.colors.primary.main,
          75: 'rgba(39,84,138,0.75)',
          50: 'rgba(39,84,138,0.5)',
          25: 'rgba(39,84,138,0.25)',
        },
        indigo: {
          DEFAULT: tokens.colors.secondary.main,
          75: 'rgba(24,59,78,0.75)',
          50: 'rgba(24,59,78,0.5)',
          25: 'rgba(24,59,78,0.25)',
        },
        yellow: {
          DEFAULT: tokens.colors.accent.main,
          75: 'rgba(221,168,83,0.75)',
          50: 'rgba(221,168,83,0.5)',
          25: 'rgba(221,168,83,0.25)',
        },
        // Additional semantic colors
        background: tokens.colors.background || '#F3F3E0',
        surface: tokens.colors.surface || '#FFFFFF',
        textPrimary: tokens.colors.textPrimary || '#183B4E',
        textSecondary: tokens.colors.textSecondary || '#27548A',
      },
      fontFamily: {
        arabic: tokens.typography.fonts.arabic.split(', '),
        latin: tokens.typography.fonts.latin.split(', '),
        display: tokens.typography.fonts.latin.split(', '),
        heading: tokens.typography.fonts.arabic.split(', '),
        body: tokens.typography.fonts.arabic.split(', '),
      },
      fontSize: tokens.typography.sizes,
      spacing: {
        ...tokens.spacing,
        '18': '4.5rem',
        '88': '22rem',
        '128': '32rem',
        '144': '36rem',
      },
      borderRadius: {
        ...tokens.radius,
        '4xl': '2rem',
        '5xl': '2.5rem',
      },
      boxShadow: {
        ...tokens.shadows,
        'soft': '0 2px 15px -3px rgba(0, 0, 0, 0.07), 0 10px 20px -2px rgba(0, 0, 0, 0.04)',
        'medium': '0 4px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
        'large': '0 10px 40px -10px rgba(0, 0, 0, 0.15), 0 2px 10px -2px rgba(0, 0, 0, 0.04)',
        'glow': '0 0 20px rgba(59, 130, 246, 0.15)',
        'glow-lg': '0 0 40px rgba(59, 130, 246, 0.25)',
        'card': '0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)',
        'card-hover': '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',
      },
      animation: {
        'fade-in': 'fadeIn 0.5s ease-in-out',
        'fade-in-up': 'fadeInUp 0.5s ease-out',
        'fade-in-down': 'fadeInDown 0.5s ease-out',
        'slide-up': 'slideUp 0.5s ease-out',
        'slide-down': 'slideDown 0.5s ease-out',
        'scale-in': 'scaleIn 0.2s ease-out',
        'float': 'float 3s ease-in-out infinite',
        'shimmer': 'shimmer 2s linear infinite',
        'gradient': 'gradient 3s ease infinite',
      },
      keyframes: {
        fadeIn: {
          '0%': { opacity: '0' },
          '100%': { opacity: '1' },
        },
        fadeInUp: {
          '0%': { opacity: '0', transform: 'translateY(20px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        fadeInDown: {
          '0%': { opacity: '0', transform: 'translateY(-20px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        slideUp: {
          '0%': { transform: 'translateY(20px)', opacity: '0' },
          '100%': { transform: 'translateY(0)', opacity: '1' },
        },
        slideDown: {
          '0%': { transform: 'translateY(-20px)', opacity: '0' },
          '100%': { transform: 'translateY(0)', opacity: '1' },
        },
        scaleIn: {
          '0%': { transform: 'scale(0.95)', opacity: '0' },
          '100%': { transform: 'scale(1)', opacity: '1' },
        },
        float: {
          '0%, 100%': { transform: 'translateY(0px)' },
          '50%': { transform: 'translateY(-10px)' },
        },
        shimmer: {
          '0%': { transform: 'translateX(-100%)' },
          '100%': { transform: 'translateX(100%)' },
        },
        gradient: {
          '0%, 100%': { backgroundPosition: '0% 50%' },
          '50%': { backgroundPosition: '100% 50%' },
        },
      },
      backgroundImage: {
        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',
        'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',
        'gradient-mesh': 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        'gradient-hero': tokens.gradients?.hero || 'linear-gradient(135deg, #3b82f6 0%, #1d4ed8 50%, #1e3a8a 100%)',
      },
      transitionProperty: {
        'height': 'height',
        'spacing': 'margin, padding',
      },
      screens: tokens.breakpoints,
    },
  },
  plugins: [
    require('@tailwindcss/forms'),
    require('@tailwindcss/typography'),
    require('tailwindcss-rtl'),
    plugin(function ({ addBase }) {
      addBase({
        'html': {
          fontFamily: "'Tajawal', 'Noto Sans Arabic', system-ui, sans-serif",
          direction: 'rtl',
        },
        'html[dir="ltr"]': {
          fontFamily: "'Inter', system-ui, -apple-system, sans-serif",
        }
      });
    }),
  ],
};
