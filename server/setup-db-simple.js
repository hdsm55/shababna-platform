import { getDatabase } from './config/database.js';

async function setupDatabase() {
    try {
        console.log('๐ ุจุฏุก ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช...');

        const database = await getDatabase();
        console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');

        // ุฅูุดุงุก ุฌุฏูู ุงููุณุชุฎุฏููู
        await database.exec(`
            CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                first_name TEXT NOT NULL,
                last_name TEXT NOT NULL,
                email TEXT UNIQUE NOT NULL,
                password TEXT NOT NULL,
                role TEXT DEFAULT 'user',
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        `);
        console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู ุงููุณุชุฎุฏููู');

        // ุฅูุดุงุก ุฌุฏูู ุงููุนุงููุงุช
        await database.exec(`
            CREATE TABLE IF NOT EXISTS events (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title TEXT NOT NULL,
                description TEXT,
                start_date DATE,
                end_date DATE,
                location TEXT,
                max_attendees INTEGER,
                attendees INTEGER DEFAULT 0,
                category TEXT,
                image_url TEXT,
                status TEXT DEFAULT 'upcoming',
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        `);
        console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู ุงููุนุงููุงุช');

        // ุฅูุดุงุก ุฌุฏูู ุงูุจุฑุงูุฌ
        await database.exec(`
            CREATE TABLE IF NOT EXISTS programs (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title TEXT NOT NULL,
                description TEXT,
                start_date DATE,
                end_date DATE,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        `);
        console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู ุงูุจุฑุงูุฌ');

        // ุฅูุดุงุก ุฌุฏูู ุงูููุงูุงุช
        await database.exec(`
            CREATE TABLE IF NOT EXISTS blogs (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title TEXT NOT NULL,
                content TEXT NOT NULL,
                author TEXT,
                image_url TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        `);
        console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู ุงูููุงูุงุช');

        // ุฅุถุงูุฉ ุจูุงูุงุช ุชุฌุฑูุจูุฉ ูููุนุงููุงุช
        await database.run(`
            INSERT INTO events (title, description, start_date, end_date, location, max_attendees, category)
            VALUES (?, ?, ?, ?, ?, ?, ?)
        `, [
            'ูุฑุดุฉ ุชุทููุฑ ุงูููุงุฑุงุช ุงูููุงุฏูุฉ',
            'ูุฑุดุฉ ุชูุงุนููุฉ ูุชุนูู ุงูููุงุฑุงุช ุงูููุงุฏูุฉ ุงูุฃุณุงุณูุฉ',
            '2024-02-15',
            '2024-02-15',
            'ูุฑูุฒ ุงูุดุจุงุจ - ุงูุฑูุงุถ',
            30,
            'workshop'
        ]);
        console.log('โ ุชู ุฅุถุงูุฉ ูุนุงููุฉ ุชุฌุฑูุจูุฉ');

        // ุฅุถุงูุฉ ุจูุงูุงุช ุชุฌุฑูุจูุฉ ููุจุฑุงูุฌ
        await database.run(`
            INSERT INTO programs (title, description, start_date, end_date)
            VALUES (?, ?, ?, ?)
        `, [
            'ุจุฑูุงูุฌ ุชุทููุฑ ุงูููุงุฑุงุช ุงูุชูููุฉ',
            'ุจุฑูุงูุฌ ุดุงูู ูุชุนููู ุงูุดุจุงุจ ุงูููุงุฑุงุช ุงูุชูููุฉ ุงููุทููุจุฉ ูู ุณูู ุงูุนูู',
            '2024-02-01',
            '2024-12-31'
        ]);
        console.log('โ ุชู ุฅุถุงูุฉ ุจุฑูุงูุฌ ุชุฌุฑูุจู');

        // ุฅุถุงูุฉ ุจูุงูุงุช ุชุฌุฑูุจูุฉ ููููุงูุงุช
        await database.run(`
            INSERT INTO blogs (title, content, author)
            VALUES (?, ?, ?)
        `, [
            'ุฃูููุฉ ุงูุนูู ุงูุชุทูุนู ููุดุจุงุจ',
            'ููุงู ุนู ุฃุซุฑ ุงูุนูู ุงูุชุทูุนู ูู ุจูุงุก ุดุฎุตูุฉ ุงูุดุจุงุจ ุงููุณูู ูุชูููุฉ ุงููุฌุชูุน.',
            'ูุฑูู ุดุจุงุจูุง'
        ]);
        console.log('โ ุชู ุฅุถุงูุฉ ููุงู ุชุฌุฑูุจู');

        // ุงุฎุชุจุงุฑ ุนุฏุฏ ุงูุณุฌูุงุช
        const usersCount = await database.get('SELECT COUNT(*) as count FROM users');
        const eventsCount = await database.get('SELECT COUNT(*) as count FROM events');
        const programsCount = await database.get('SELECT COUNT(*) as count FROM programs');
        const blogsCount = await database.get('SELECT COUNT(*) as count FROM blogs');

        console.log(`๐ฅ ุนุฏุฏ ุงููุณุชุฎุฏููู: ${usersCount.count}`);
        console.log(`๐ ุนุฏุฏ ุงููุนุงููุงุช: ${eventsCount.count}`);
        console.log(`๐ ุนุฏุฏ ุงูุจุฑุงูุฌ: ${programsCount.count}`);
        console.log(`๐ ุนุฏุฏ ุงูููุงูุงุช: ${blogsCount.count}`);

        console.log('๐ ุชู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ!');

    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
    }
}

setupDatabase();