import { query, run } from './config/database-sqlite.js';
import bcrypt from 'bcryptjs';

async function setupUsers() {
    try {
        console.log('๐ง ุจุฏุก ุฅุนุฏุงุฏ ุงููุณุชุฎุฏููู...\n');

        // 1. ุฅูุดุงุก ุฌุฏูู ุงููุณุชุฎุฏููู
        console.log('1. ุฅูุดุงุก ุฌุฏูู ุงููุณุชุฎุฏููู...');
        await run(`
            CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                email TEXT UNIQUE NOT NULL,
                password TEXT NOT NULL,
                first_name TEXT NOT NULL,
                last_name TEXT NOT NULL,
                role TEXT DEFAULT 'user',
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        `);
        console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู ุงููุณุชุฎุฏููู');

        // 2. ุฅูุดุงุก ูุฏูุฑ ุงูุชุฑุงุถู
        console.log('\n2. ุฅูุดุงุก ูุฏูุฑ ุงูุชุฑุงุถู...');
        const adminEmail = 'admin@shababna.com';
        const adminPassword = 'password';

        // ุงูุชุญูู ูู ูุฌูุฏ ุงููุฏูุฑ
        const existingAdmin = await query('SELECT * FROM users WHERE email = ?', [adminEmail]);

        if (existingAdmin.rows.length === 0) {
            const hashedPassword = await bcrypt.hash(adminPassword, 12);

            await run(`
                INSERT INTO users (email, password, first_name, last_name, role)
                VALUES (?, ?, ?, ?, ?)
            `, [adminEmail, hashedPassword, 'Admin', 'User', 'admin']);

            console.log('โ ุชู ุฅูุดุงุก ุงููุฏูุฑ ุจูุฌุงุญ');
            console.log(`๐ง ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: ${adminEmail}`);
            console.log(`๐ ูููุฉ ุงููุฑูุฑ: ${adminPassword}`);
        } else {
            console.log('โ ุงููุฏูุฑ ููุฌูุฏ ุจุงููุนู');
        }

        // 3. ุฅูุดุงุก ูุณุชุฎุฏููู ุชุฌุฑูุจููู
        console.log('\n3. ุฅูุดุงุก ูุณุชุฎุฏููู ุชุฌุฑูุจููู...');
        const sampleUsers = [
            {
                email: 'user1@example.com',
                password: 'password123',
                first_name: 'ุฃุญูุฏ',
                last_name: 'ูุญูุฏ',
                role: 'user'
            },
            {
                email: 'user2@example.com',
                password: 'password123',
                first_name: 'ุณุงุฑุฉ',
                last_name: 'ุนูู',
                role: 'user'
            },
            {
                email: 'moderator@example.com',
                password: 'password123',
                first_name: 'ุนูุฑ',
                last_name: 'ุฎุงูุฏ',
                role: 'moderator'
            }
        ];

        for (const user of sampleUsers) {
            const existingUser = await query('SELECT * FROM users WHERE email = ?', [user.email]);

            if (existingUser.rows.length === 0) {
                const hashedPassword = await bcrypt.hash(user.password, 12);

                await run(`
                    INSERT INTO users (email, password, first_name, last_name, role)
                    VALUES (?, ?, ?, ?, ?)
                `, [user.email, hashedPassword, user.first_name, user.last_name, user.role]);

                console.log(`โ ุชู ุฅูุดุงุก ุงููุณุชุฎุฏู: ${user.email}`);
            } else {
                console.log(`โ ุงููุณุชุฎุฏู ููุฌูุฏ: ${user.email}`);
            }
        }

        // 4. ุงูุชุญูู ูู ุงูุจูุงูุงุช
        console.log('\n4. ุงูุชุญูู ูู ุงูุจูุงูุงุช...');
        const usersResult = await query('SELECT * FROM users');
        console.log(`โ ุนุฏุฏ ุงููุณุชุฎุฏููู: ${usersResult.rows.length}`);

        console.log('๐ ุงููุณุชุฎุฏููู ุงููุชุงุญุฉ:');
        usersResult.rows.forEach((user, index) => {
            console.log(`   ${index + 1}. ${user.email} (${user.role}) - ${user.first_name} ${user.last_name}`);
        });

        console.log('\nโ ุชู ุฅุนุฏุงุฏ ุงููุณุชุฎุฏููู ุจูุฌุงุญ!');
        console.log('\n๐ ุจูุงูุงุช ุชุณุฌูู ุงูุฏุฎูู ูููุฏูุฑ:');
        console.log(`   ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: ${adminEmail}`);
        console.log(`   ูููุฉ ุงููุฑูุฑ: ${adminPassword}`);

    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุฅุนุฏุงุฏ ุงููุณุชุฎุฏููู:', error);
    }
}

setupUsers();