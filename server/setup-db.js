import { createTables, testConnection } from './config/database.js';
import { query } from './config/database.js';
import bcrypt from 'bcryptjs';

async function setupDatabase() {
    try {
        console.log('๐ ุจุฏุก ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช PostgreSQL...');

        // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
        const isConnected = await testConnection();
        if (!isConnected) {
            console.error('โ ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
            process.exit(1);
        }

        // ุฅูุดุงุก ุงูุฌุฏุงูู
        console.log('๐ ุฅูุดุงุก ุงูุฌุฏุงูู...');
        await createTables();
        console.log('โ ุชู ุฅูุดุงุก ุงูุฌุฏุงูู ุจูุฌุงุญ');

        // ุฅุถุงูุฉ ุจูุงูุงุช ุงููุณุชุฎุฏููู
        console.log('๐ฅ ุฅุถุงูุฉ ุงููุณุชุฎุฏููู...');
        const hashedPassword = await bcrypt.hash('password123', 10);
        const adminPassword = await bcrypt.hash('admin123', 10);

        await query(`
            INSERT INTO users (name, email, password, role, created_at)
            VALUES
                ('Admin User', 'admin@shababna.com', $1, 'admin', NOW()),
                ('User One', 'user1@example.com', $2, 'user', NOW()),
                ('User Two', 'user2@example.com', $2, 'user', NOW())
            ON CONFLICT (email) DO NOTHING
        `, [adminPassword, hashedPassword]);

        // ุฅุถุงูุฉ ุจูุงูุงุช ุงููุนุงููุงุช
        console.log('๐ ุฅุถุงูุฉ ุงููุนุงููุงุช...');
        await query(`
            INSERT INTO events (title, description, start_date, end_date, location, max_attendees, attendees, category, status, created_at)
            VALUES
                ('ูุฑุดุฉ ุชุทููุฑ ุงูููุงุฑุงุช ุงูููุงุฏูุฉ', 'ูุฑุดุฉ ุชูุงุนููุฉ ูุชุนูู ุงูููุงุฑุงุช ุงูููุงุฏูุฉ ุงูุฃุณุงุณูุฉ ูููููุฉ ุชุทุจูููุง ูู ุงูุญูุงุฉ ุงูููููุฉ ูุงูุนูู', '2024-02-15', '2024-02-15', 'ูุฑูุฒ ุงูุดุจุงุจ - ุงูุฑูุงุถ', 30, 12, 'workshop', 'upcoming', NOW()),
                ('ูุคุชูุฑ ุงูุดุจุงุจ ุงูุนุฑุจู', 'ูุคุชูุฑ ุณููู ูุฌูุน ุงูุดุจุงุจ ุงูุนุฑุจู ูููุงูุดุฉ ุงูุชุญุฏูุงุช ูุงููุฑุต ูู ุงูููุทูุฉ', '2024-03-20', '2024-03-20', 'ููุฏู ุงูุดุฑู - ุฌุฏุฉ', 200, 45, 'conference', 'upcoming', NOW()),
                ('ููุงุก ุดุจูุฉ ุงูุชูุงุตู ุงููููู', 'ูุฑุตุฉ ููุชูุงุตู ูุน ุงููููููู ูู ูุฌุงู ุงูุชูููููุฌูุง ูุชุจุงุฏู ุงูุฎุจุฑุงุช', '2024-02-28', '2024-02-28', 'ูููู ุงูุงุจุชูุงุฑ - ุงูุฏูุงู', 50, 28, 'networking', 'upcoming', NOW()),
                ('ูุฑุดุฉ ุงูุจุฑูุฌุฉ ูููุจุชุฏุฆูู', 'ุชุนูู ุฃุณุงุณูุงุช ุงูุจุฑูุฌุฉ ุจุงุณุชุฎุฏุงู Python ูุน ูุดุงุฑูุน ุนูููุฉ', '2024-02-10', '2024-02-10', 'ูุฑูุฒ ุงูุชุฏุฑูุจ ุงูุชููู - ุงูุฑูุงุถ', 40, 35, 'workshop', 'upcoming', NOW()),
                ('ูุคุชูุฑ ุฑูุงุฏุฉ ุงูุฃุนูุงู', 'ูุคุชูุฑ ูุณูุท ุงูุถูุก ุนูู ูุตุต ูุฌุงุญ ุฑูุงุฏ ุงูุฃุนูุงู ุงููุญูููู', '2024-01-25', '2024-01-25', 'ูุงุนุฉ ุงููุคุชูุฑุงุช - ุงูุฑูุงุถ', 150, 120, 'conference', 'upcoming', NOW()),
                ('ูุฏูุฉ ุงูุชุทูุน ุงููุฌุชูุนู', 'ูุฏูุฉ ุญูู ุฃูููุฉ ุงูุนูู ุงูุชุทูุนู ูุฏูุฑู ูู ุชูููุฉ ุงููุฌุชูุน', '2024-03-10', '2024-03-10', 'ูุฑูุฒ ุงููุฌุชูุน - ุงูุฑูุงุถ', 100, 75, 'seminar', 'upcoming', NOW()),
                ('ุฏูุฑุฉ ุชุฏุฑูุจูุฉ ูู ุงูุฅุณุนุงูุงุช ุงูุฃูููุฉ', 'ุฏูุฑุฉ ุดุงููุฉ ูุชุนูู ุงูุฅุณุนุงูุงุช ุงูุฃูููุฉ ุงูุฃุณุงุณูุฉ ููุดุจุงุจ', '2024-02-25', '2024-02-25', 'ูุฑูุฒ ุงูุตุญุฉ - ุฌุฏุฉ', 40, 30, 'training', 'upcoming', NOW()),
                ('ูุฑุดุฉ ุงููุชุงุจุฉ ุงูุฅุจุฏุงุนูุฉ', 'ุชุนูู ูููู ุงููุชุงุจุฉ ุงูุฅุจุฏุงุนูุฉ ูุชุทููุฑ ุงูููุงุฑุงุช ุงูุฃุฏุจูุฉ', '2024-03-08', '2024-03-08', 'ูุฑูุฒ ุงูุซูุงูุฉ - ุงูุฏูุงู', 30, 22, 'workshop', 'upcoming', NOW())
            ON CONFLICT DO NOTHING
        `);

        // ุฅุถุงูุฉ ุจูุงูุงุช ุงูุจุฑุงูุฌ
        console.log('๐ ุฅุถุงูุฉ ุงูุจุฑุงูุฌ...');
        await query(`
            INSERT INTO programs (title, description, category, goal_amount, current_amount, participants_count, status, start_date, end_date, created_at)
            VALUES
                ('ุจุฑูุงูุฌ ุชุทููุฑ ุงูููุงุฑุงุช ุงูุชูููุฉ', 'ุจุฑูุงูุฌ ุดุงูู ูุชุนููู ุงูุดุจุงุจ ุงูููุงุฑุงุช ุงูุชูููุฉ ุงููุทููุจุฉ ูู ุณูู ุงูุนูู ูุซู ุงูุจุฑูุฌุฉ ูุงูุชุตููู ูุงูุชุณููู ุงูุฑููู', 'ุชููู', 50000.00, 25000.00, 45, 'active', '2024-02-01', '2024-12-31', NOW()),
                ('ูุดุฑูุน ุฑูุงุฏุฉ ุงูุฃุนูุงู ููุดุจุงุจ', 'ุฏุนู ุงูุดุจุงุจ ูู ุฅูุดุงุก ูุดุงุฑูุนูู ุงูุฎุงุตุฉ ูุชุทููุฑ ุฃููุงุฑูู ุงูุฑูุงุฏูุฉ ูุน ุชูููุฑ ุงูุชุฏุฑูุจ ูุงูุชูููู', 'ุฑูุงุฏุฉ ุฃุนูุงู', 75000.00, 40000.00, 32, 'active', '2024-01-15', '2024-11-30', NOW()),
                ('ุจุฑูุงูุฌ ุงูุชุทูุน ุงููุฌุชูุนู', 'ุชุดุฌูุน ุงูุดุจุงุจ ุนูู ุงููุดุงุฑูุฉ ูู ุงูุฃุนูุงู ุงูุชุทูุนูุฉ ูุฎุฏูุฉ ุงููุฌุชูุน ูุชูููุฉ ุฑูุญ ุงููุณุคูููุฉ ุงูุงุฌุชูุงุนูุฉ', 'ุงุฌุชูุงุนู', 30000.00, 18000.00, 78, 'active', '2024-03-01', '2024-10-31', NOW()),
                ('ูุดุฑูุน ุฏุนู ุงูุชุนููู ุงูุนุงูู', 'ูุณุงุนุฏุฉ ุงูุทูุงุจ ุงููุชููููู ูู ุฅููุงู ุชุนููููู ุงูุนุงูู ูุชูููุฑ ุงูููุญ ุงูุฏุฑุงุณูุฉ ูุงููุชุจ', 'ุชุนูููู', 100000.00, 65000.00, 120, 'active', '2024-02-15', '2024-12-15', NOW()),
                ('ุจุฑูุงูุฌ ุงูุงุจุชูุงุฑ ูุงูุชูููููุฌูุง', 'ุฏุนู ุงููุดุงุฑูุน ุงูุงุจุชูุงุฑูุฉ ูู ูุฌุงู ุงูุชูููููุฌูุง ูุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุชุทููุฑ ุงูุญููู ุงููุณุชูุจููุฉ', 'ุชููู', 80000.00, 45000.00, 56, 'active', '2024-01-01', '2024-12-31', NOW()),
                ('ุจุฑูุงูุฌ ุงูุตุญุฉ ูุงูููุงูุฉ ุงูุจุฏููุฉ', 'ุชุดุฌูุน ุงูุดุจุงุจ ุนูู ููุงุฑุณุฉ ุงูุฑูุงุถุฉ ูุงุชุจุงุน ููุท ุญูุงุฉ ุตุญู ูู ุฎูุงู ุจุฑุงูุฌ ุชุฏุฑูุจูุฉ ูุชููุนุฉ', 'ุตุญู', 25000.00, 12000.00, 89, 'active', '2024-02-01', '2024-08-31', NOW()),
                ('ูุดุฑูุน ุงูุญุฑู ุงููุฏููุฉ ุงูุชูููุฏูุฉ', 'ุงูุญูุงุธ ุนูู ุงูุญุฑู ุงููุฏููุฉ ุงูุชูููุฏูุฉ ูุชุนููููุง ููุดุจุงุจ ูุถูุงู ุงุณุชูุฑุงุฑูุชูุง ููุฃุฌูุงู ุงููุงุฏูุฉ', 'ุซูุงูู', 20000.00, 8000.00, 34, 'active', '2024-03-15', '2024-09-30', NOW())
            ON CONFLICT DO NOTHING
        `);

        console.log('โ ุชู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ!');
        console.log('๐ ุจูุงูุงุช ุชุณุฌูู ุงูุฏุฎูู:');
        console.log('   - Admin: admin@shababna.com / admin123');
        console.log('   - User: user1@example.com / password123');
        console.log('๐ pgAdmin: http://localhost:5050');
        console.log('   - Email: admin@shababna.com');
        console.log('   - Password: admin123');

        process.exit(0);
    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
        process.exit(1);
    }
}

setupDatabase();